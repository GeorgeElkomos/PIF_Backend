{
  "api_info": {
    "name": "SubmitIQ Authentication API",
    "version": "2.0.0",
    "base_url": "http://localhost:8000/api/v1",
    "description": "Company-based authentication API with hierarchical user management, JWT tokens and role-based access control",
    "documentation_url": "http://localhost:8000/api/docs/"
  },
  "authentication_strategy": {
    "type": "JWT (JSON Web Tokens)",
    "access_token_lifetime": "7 minutes",
    "refresh_token_lifetime": "4 hours",
    "token_blacklisting": "Enabled for logout and security",
    "security_features": [
      "Rate limiting",
      "IP tracking",
      "User agent validation",
      "Brute force protection",
      "Token rotation on refresh",
      "Automatic logout on password change",
      "Company-based user isolation"
    ],
    "roles": ["SuperAdmin", "Admin", "User"],
    "role_hierarchy": {
      "SuperAdmin": "PIF system administrator - can approve companies and manage all users",
      "Admin": "Company administrator - can manage users within their company",
      "User": "Regular company user - limited access within their company"
    },
    "status_workflow": ["Pending", "Accepted", "Rejected"],
    "company_structure": {
      "description": "Users belong to companies. Company admins are created through registration and require SuperAdmin approval.",
      "approval_flow": "Company registration -> SuperAdmin approval -> Company admin can create users"
    }
  },
  "endpoints": [
    {
      "name": "Company Registration",
      "path": "/auth/register/",
      "method": "POST",
      "authentication_required": false,
      "description": "Register a new company with admin user. Creates both company and admin user in pending status. Requires SuperAdmin approval to become active.",
      "request_body": {
        "company_name": {
          "type": "string",
          "required": true,
          "max_length": 100,
          "description": "Unique company name"
        },
        "username": {
          "type": "string",
          "required": true,
          "min_length": 3,
          "max_length": 30,
          "description": "Alphanumeric characters and underscores only"
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "Must be unique and valid email format"
        },
        "password": {
          "type": "string",
          "required": true,
          "min_length": 12,
          "description": "Must contain uppercase, lowercase, digit, and special character"
        },
        "password_confirm": {
          "type": "string",
          "required": true,
          "description": "Must match password field"
        },
        "first_name": {
          "type": "string",
          "required": true,
          "max_length": 30
        },
        "last_name": {
          "type": "string",
          "required": true,
          "max_length": 30
        }
      },
      "response_examples": {
        "201": {
          "description": "Company and admin user registration successful",
          "body": {
            "id": 123,
            "username": "johncompany",
            "email": "john@company.com",
            "first_name": "John",
            "last_name": "Doe",
            "role": "Admin",
            "status": "Pending",
            "company_name": "ACME Corp",
            "date_joined": "2025-07-31T10:30:00Z",
            "is_active": false
          }
        },
        "400": {
          "description": "Validation errors",
          "body": {
            "company_name": ["A company with this name already exists."],
            "username": ["A user with this username already exists."],
            "password": ["Password must contain at least one uppercase letter."]
          }
        },
        "500": {
          "description": "Server error",
          "body": {
            "error": "Registration failed. Please try again."
          }
        }
      }
    },
    {
      "name": "User Login",
      "path": "/auth/login/",
      "method": "POST",
      "authentication_required": false,
      "description": "Authenticate user with username/email and password. Returns JWT access and refresh tokens along with user profile. Only works for active and approved users.",
      "request_body": {
        "username_or_email": {
          "type": "string",
          "required": true,
          "description": "Username or email address"
        },
        "password": {
          "type": "string",
          "required": true,
          "description": "User password"
        }
      },
      "response_examples": {
        "200": {
          "description": "Login successful",
          "body": {
            "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
            "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
            "user": {
              "id": 123,
              "username": "johncompany",
              "email": "john@company.com",
              "first_name": "John",
              "last_name": "Doe",
              "role": "Admin",
              "status": "Accepted",
              "company_name": "ACME Corp",
              "date_joined": "2025-07-31T10:30:00Z",
              "is_active": true
            }
          }
        },
        "401": {
          "description": "Invalid credentials or inactive account",
          "body": {
            "error": "Invalid credentials."
          }
        },
        "429": {
          "description": "Too many login attempts",
          "body": {
            "detail": "Request was throttled. Expected available in 60 seconds."
          }
        },
        "500": {
          "description": "Server error",
          "body": {
            "error": "Authentication failed. Please try again."
          }
        }
      }
    },
    {
      "name": "Token Refresh",
      "path": "/auth/token/refresh/",
      "method": "POST",
      "authentication_required": false,
      "description": "Refresh access token using refresh token. Returns new access token and optionally a new refresh token. This endpoint should be called when receiving 401 Unauthorized responses.",
      "request_body": {
        "refresh": {
          "type": "string",
          "required": true,
          "description": "Valid refresh token"
        }
      },
      "response_examples": {
        "200": {
          "description": "Token refresh successful",
          "body": {
            "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
            "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
          }
        },
        "401": {
          "description": "Invalid or expired refresh token",
          "body": {
            "error": "Invalid or expired token."
          }
        },
        "400": {
          "description": "Missing refresh token",
          "body": {
            "refresh": ["This field is required."]
          }
        },
        "429": {
          "description": "Too many refresh attempts",
          "body": {
            "detail": "Request was throttled. Expected available in 60 seconds."
          }
        }
      }
    },
    {
      "name": "User Logout",
      "path": "/auth/logout/",
      "method": "POST",
      "authentication_required": true,
      "description": "Logout user and blacklist refresh token to prevent further use. Requires authentication via access token.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "request_body": {
        "refresh": {
          "type": "string",
          "required": true,
          "description": "Refresh token to blacklist"
        }
      },
      "response_examples": {
        "200": {
          "description": "Logout successful",
          "body": {
            "message": "Logout successful."
          }
        },
        "400": {
          "description": "Invalid or missing refresh token",
          "body": {
            "error": "Refresh token is required."
          }
        },
        "401": {
          "description": "Invalid access token",
          "body": {
            "detail": "Given token not valid for any token type"
          }
        },
        "500": {
          "description": "Server error",
          "body": {
            "error": "Logout failed. Please try again."
          }
        }
      }
    },
    {
      "name": "Get User Profile",
      "path": "/auth/profile/",
      "method": "GET",
      "authentication_required": true,
      "description": "Get current authenticated user's profile information including company details.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "response_examples": {
        "200": {
          "description": "Profile retrieved successfully",
          "body": {
            "id": 123,
            "username": "johncompany",
            "email": "john@company.com",
            "first_name": "John",
            "last_name": "Doe",
            "full_name": "John Doe",
            "role": "Admin",
            "status": "Accepted",
            "company_name": "ACME Corp",
            "date_joined": "2025-07-31T10:30:00Z",
            "date_accepted": "2025-07-31T11:00:00Z",
            "is_active": true
          }
        },
        "401": {
          "description": "Invalid or expired access token",
          "body": {
            "detail": "Given token not valid for any token type"
          }
        }
      }
    },
    {
      "name": "Update User Profile",
      "path": "/auth/profile/",
      "method": "PATCH",
      "authentication_required": true,
      "description": "Update current authenticated user's profile information (partial update).",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "request_body": {
        "first_name": {
          "type": "string",
          "required": false,
          "max_length": 30
        },
        "last_name": {
          "type": "string",
          "required": false,
          "max_length": 30
        },
        "email": {
          "type": "string",
          "required": false,
          "description": "Must be unique if provided"
        }
      },
      "response_examples": {
        "200": {
          "description": "Profile updated successfully",
          "body": {
            "id": 123,
            "username": "johncompany",
            "email": "john@newcompany.com",
            "first_name": "John",
            "last_name": "Smith",
            "role": "Admin",
            "status": "Accepted",
            "company_name": "ACME Corp",
            "date_joined": "2025-07-31T10:30:00Z",
            "is_active": true
          }
        },
        "400": {
          "description": "Validation errors",
          "body": {
            "email": ["A user with this email already exists."]
          }
        },
        "401": {
          "description": "Invalid or expired access token",
          "body": {
            "detail": "Given token not valid for any token type"
          }
        }
      }
    },
    {
      "name": "Change Password",
      "path": "/auth/profile/change-password/",
      "method": "POST",
      "authentication_required": true,
      "description": "Change current user's password. This will force logout from all devices for security.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "request_body": {
        "current_password": {
          "type": "string",
          "required": true,
          "description": "Current password for verification"
        },
        "new_password": {
          "type": "string",
          "required": true,
          "min_length": 12,
          "description": "New password with same strength requirements as registration"
        },
        "new_password_confirm": {
          "type": "string",
          "required": true,
          "description": "Must match new_password field"
        }
      },
      "response_examples": {
        "200": {
          "description": "Password changed successfully",
          "body": {
            "message": "Password changed successfully. Please log in again."
          }
        },
        "400": {
          "description": "Validation errors",
          "body": {
            "current_password": ["Current password is incorrect."],
            "new_password": ["Password must contain at least one uppercase letter."]
          }
        },
        "401": {
          "description": "Invalid or expired access token",
          "body": {
            "detail": "Given token not valid for any token type"
          }
        },
        "500": {
          "description": "Server error",
          "body": {
            "error": "Password change failed. Please try again."
          }
        }
      }
    },
    {
      "name": "List Pending Company Registrations",
      "path": "/auth/company-approvals/",
      "method": "GET",
      "authentication_required": true,
      "role_required": "SuperAdmin",
      "description": "Get list of pending company admin registrations that need approval. Only accessible by SuperAdmin users.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "response_examples": {
        "200": {
          "description": "Pending registrations retrieved successfully",
          "body": [
            {
              "id": 124,
              "username": "newcompanyadmin",
              "email": "admin@newcompany.com",
              "first_name": "Jane",
              "last_name": "Smith",
              "role": "Admin",
              "status": "Pending",
              "company_name": "New Tech Corp",
              "date_joined": "2025-07-31T09:00:00Z",
              "is_active": false
            }
          ]
        },
        "401": {
          "description": "Invalid or expired access token",
          "body": {
            "detail": "Given token not valid for any token type"
          }
        },
        "403": {
          "description": "Insufficient permissions",
          "body": {
            "error": "Permission denied. SuperAdmin access required."
          }
        }
      }
    },
    {
      "name": "Approve/Reject Company Registration",
      "path": "/auth/company-approvals/{id}/approve_reject/",
      "method": "POST",
      "authentication_required": true,
      "role_required": "SuperAdmin",
      "description": "Approve or reject a pending company admin registration. Only accessible by SuperAdmin users.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "request_body": {
        "status": {
          "type": "string",
          "required": true,
          "choices": ["Accepted", "Rejected"],
          "description": "Approval decision"
        },
        "rejection_reason": {
          "type": "string",
          "required": false,
          "description": "Reason for rejection (optional)"
        }
      },
      "response_examples": {
        "200": {
          "description": "Company registration approved/rejected successfully",
          "body": {
            "id": 124,
            "username": "newcompanyadmin",
            "email": "admin@newcompany.com",
            "first_name": "Jane",
            "last_name": "Smith",
            "role": "Admin",
            "status": "Accepted",
            "company_name": "New Tech Corp",
            "date_joined": "2025-07-31T09:00:00Z",
            "date_accepted": "2025-07-31T12:00:00Z",
            "is_active": true
          }
        },
        "400": {
          "description": "Invalid status or other validation errors",
          "body": {
            "status": ["This field is required."]
          }
        },
        "403": {
          "description": "Insufficient permissions",
          "body": {
            "error": "Permission denied. SuperAdmin access required."
          }
        },
        "404": {
          "description": "Pending registration not found",
          "body": {
            "error": "Pending company admin not found."
          }
        }
      }
    },
    {
      "name": "List Company Users",
      "path": "/auth/company-users/",
      "method": "GET",
      "authentication_required": true,
      "role_required": "Admin or SuperAdmin",
      "description": "Get list of users in the authenticated user's company. Both SuperAdmin and Company admins can only see users from their own company.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "response_examples": {
        "200": {
          "description": "Company users retrieved successfully",
          "body": [
            {
              "id": 125,
              "username": "companyuser1",
              "email": "user1@company.com",
              "first_name": "Bob",
              "last_name": "Johnson",
              "role": "User",
              "status": "Accepted",
              "company_name": "ACME Corp",
              "date_joined": "2025-07-31T13:00:00Z",
              "is_active": true
            },
            {
              "id": 126,
              "username": "companyuser2",
              "email": "user2@company.com",
              "first_name": "Alice",
              "last_name": "Wilson",
              "role": "User",
              "status": "Accepted",
              "company_name": "ACME Corp",
              "date_joined": "2025-07-31T14:00:00Z",
              "is_active": true
            }
          ]
        },
        "401": {
          "description": "Invalid or expired access token",
          "body": {
            "detail": "Given token not valid for any token type"
          }
        },
        "403": {
          "description": "Insufficient permissions",
          "body": {
            "error": "Permission denied. Admin access required."
          }
        }
      }
    },
    {
      "name": "Create Company User",
      "path": "/auth/company-users/",
      "method": "POST",
      "authentication_required": true,
      "role_required": "Admin or SuperAdmin",
      "description": "Create a new user in the admin's company. The user will be automatically approved and assigned to the admin's company.",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "request_body": {
        "username": {
          "type": "string",
          "required": true,
          "min_length": 3,
          "max_length": 30,
          "description": "Alphanumeric characters and underscores only"
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "Must be unique and valid email format"
        },
        "password": {
          "type": "string",
          "required": true,
          "min_length": 12,
          "description": "Must contain uppercase, lowercase, digit, and special character"
        },
        "password_confirm": {
          "type": "string",
          "required": true,
          "description": "Must match password field"
        },
        "first_name": {
          "type": "string",
          "required": true,
          "max_length": 30
        },
        "last_name": {
          "type": "string",
          "required": true,
          "max_length": 30
        }
      },
      "response_examples": {
        "201": {
          "description": "User created successfully",
          "body": {
            "id": 127,
            "username": "newuser",
            "email": "newuser@company.com",
            "first_name": "New",
            "last_name": "User",
            "role": "User",
            "status": "Accepted",
            "company_name": "ACME Corp",
            "date_joined": "2025-07-31T15:00:00Z",
            "is_active": true
          }
        },
        "400": {
          "description": "Validation errors",
          "body": {
            "username": ["A user with this username already exists."],
            "password": ["Password must contain at least one uppercase letter."]
          }
        },
        "403": {
          "description": "Insufficient permissions",
          "body": {
            "error": "Permission denied. Only company admins can create users."
          }
        },
        "500": {
          "description": "Server error",
          "body": {
            "error": "User creation failed. Please try again."
          }
        }
      }
    }
  ],
  "user_roles_and_permissions": {
    "SuperAdmin": {
      "description": "System administrator from PIF company",
      "permissions": [
        "Approve/reject company registrations",
        "View all companies and users (via separate admin interface)",
        "Manage system-wide settings",
        "Create users in their own company",
        "Manage users within their company (same as Admin)",
        "Full system access for approvals"
      ],
      "endpoints_access": [
        "All endpoints",
        "/auth/company-approvals/",
        "/auth/company-approvals/{id}/approve_reject/",
        "/auth/company-users/ (shows only their company users)"
      ]
    },
    "Admin": {
      "description": "Company administrator",
      "permissions": [
        "Manage users within their company",
        "View company user list",
        "Create new company users",
        "Update own profile",
        "Change own password"
      ],
      "endpoints_access": [
        "/auth/login/",
        "/auth/logout/",
        "/auth/profile/",
        "/auth/company-users/"
      ]
    },
    "User": {
      "description": "Regular company user",
      "permissions": [
        "View own profile",
        "Update own profile",
        "Change own password",
        "Access company-specific features"
      ],
      "endpoints_access": [
        "/auth/login/",
        "/auth/logout/",
        "/auth/profile/"
      ]
    }
  },
  "company_workflow": {
    "registration_flow": [
      "1. New company registers through /auth/register/ (creates company + admin user)",
      "2. Company admin status is set to 'Pending'",
      "3. SuperAdmin reviews pending registrations via /auth/company-approvals/",
      "4. SuperAdmin approves/rejects via /auth/company-approvals/{id}/approve_reject/",
      "5. If approved, company admin can login and create users",
      "6. Company admin creates users via /auth/company-users/ (auto-approved)"
    ],
    "user_creation_flow": [
      "1. Company admin logs in",
      "2. Admin creates user via POST /auth/company-users/",
      "3. User is automatically approved and assigned to admin's company",
      "4. User can immediately login and access system"
    ],
    "approval_hierarchy": {
      "company_admins": "Require SuperAdmin approval",
      "company_users": "Auto-approved by company admin creation"
    }
  },
  "frontend_integration_guide": {
    "description": "Complete guide for implementing company-based authentication in your frontend application",
    "token_management": {
      "storage": {
        "access_token": "Store in memory or secure HTTP-only cookie (recommended)",
        "refresh_token": "Store in secure HTTP-only cookie or secure localStorage",
        "security_note": "Never store tokens in plain localStorage for production apps"
      },
      "automatic_refresh_strategy": {
        "description": "Implement automatic token refresh on 401 responses",
        "implementation": [
          "1. Intercept all API responses",
          "2. If response status is 401 (Unauthorized), attempt token refresh",
          "3. If refresh succeeds, retry original request with new token",
          "4. If refresh fails with 401, redirect to login page",
          "5. Show session expired popup with login redirect button"
        ]
      }
    },
    "role_based_navigation": {
      "SuperAdmin": {
        "dashboard_features": [
          "Company approval queue",
          "System-wide user management",
          "Company statistics",
          "System settings"
        ]
      },
      "Admin": {
        "dashboard_features": [
          "Company user management",
          "User creation form",
          "Company user statistics",
          "Profile management"
        ]
      },
      "User": {
        "dashboard_features": [
          "Profile management",
          "Company-specific features",
          "Basic dashboard"
        ]
      }
    },
    "company_registration_flow": {
      "steps": [
        "1. Show company registration form with company name + admin user details",
        "2. POST to /auth/register/ with all required fields",
        "3. Show success message: 'Registration submitted. Awaiting approval.'",
        "4. Redirect to login page or show login form",
        "5. Admin cannot login until approved by SuperAdmin"
      ]
    },
    "admin_user_management": {
      "list_users": "GET /auth/company-users/ to show company users",
      "create_user": "POST /auth/company-users/ with user details",
      "user_table_columns": [
        "username",
        "email", 
        "first_name",
        "last_name",
        "role",
        "status",
        "date_joined",
        "actions"
      ]
    },
    "superadmin_approval_interface": {
      "pending_list": "GET /auth/company-approvals/ to show pending companies",
      "approval_actions": "POST /auth/company-approvals/{id}/approve_reject/",
      "approval_table_columns": [
        "company_name",
        "admin_username",
        "admin_email",
        "date_registered",
        "approve_button",
        "reject_button"
      ]
    }
  },
  "testing_guide": {
    "test_accounts": {
      "superadmin": {
        "username": "PIF_SubmitIQ",
        "password": "PIF_SubmitIQ123",
        "email": "PIF_SubmitIQ@PIF.com",
        "company": "PIF",
        "role": "SuperAdmin",
        "note": "Created via management command"
      },
      "test_company_flow": [
        "1. Register test company via /auth/register/",
        "2. Login as SuperAdmin",
        "3. Approve test company via /auth/company-approvals/",
        "4. Login as approved company admin",
        "5. Create test users via /auth/company-users/"
      ]
    },
    "postman_collection": {
      "base_url": "{{base_url}}/api/v1",
      "environment_variables": {
        "base_url": "http://localhost:8000",
        "access_token": "Set after login",
        "refresh_token": "Set after login",
        "superadmin_token": "Set after SuperAdmin login",
        "admin_token": "Set after company admin login"
      }
    }
  }
}
